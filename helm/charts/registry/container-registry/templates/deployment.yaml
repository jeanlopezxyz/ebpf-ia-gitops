apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "container-registry.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "container-registry.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "container-registry.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "container-registry.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      containers:
        - name: registry
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
            - name: debug
              containerPort: 5001
              protocol: TCP
          env:
            - name: REGISTRY_HTTP_ADDR
              value: ":5000"
            - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
              value: "/var/lib/registry"
            - name: REGISTRY_HEALTH_STORAGEDRIVER_ENABLED
              value: "true"
            - name: REGISTRY_HEALTH_STORAGEDRIVER_INTERVAL
              value: "10s"
            - name: REGISTRY_HEALTH_STORAGEDRIVER_THRESHOLD
              value: "3"
          volumeMounts:
            - name: registry-storage
              mountPath: /var/lib/registry
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: registry-storage
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "container-registry.fullname" . }}-storage
          {{- else }}
          emptyDir: {}
          {{- end }}