---
# Job to configure StorageClass annotations declaratively
apiVersion: batch/v1
kind: Job
metadata:
  name: storage-class-configurator
  namespace: default
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  template:
    spec:
      serviceAccountName: storage-admin
      containers:
      - name: configure-storage
        image: bitnami/kubectl:latest
        command:
        - /bin/bash
        - -c
        - |
          echo "üîß Configuring StorageClass declaratively..."
          
          # Verify local-path is default StorageClass
          echo "Verifying local-path StorageClass configuration..."
          
          if kubectl get storageclass local-path >/dev/null 2>&1; then
            echo "‚úÖ local-path StorageClass found"
            
            # Ensure it's marked as default
            kubectl annotate storageclass local-path storageclass.kubernetes.io/is-default-class=true --overwrite
            kubectl label storageclass local-path app.kubernetes.io/managed-by=argocd --overwrite
            
            # Remove default from any other StorageClass
            for sc in $(kubectl get storageclass -o name | grep -v local-path); do
              kubectl annotate $sc storageclass.kubernetes.io/is-default-class- || true
            done
            
            echo "‚úÖ local-path configured as default StorageClass"
            
            # Verify configuration
            echo "üîç Final StorageClass configuration:"
            kubectl get storageclass
          else
            echo "‚ùå local-path StorageClass not found"
            echo "Available StorageClasses:"
            kubectl get storageclass
            exit 1
          fi
      restartPolicy: OnFailure
  backoffLimit: 3
---
# ServiceAccount for storage operations
apiVersion: v1
kind: ServiceAccount
metadata:
  name: storage-admin
  namespace: default
---
# ClusterRole for storage management
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: storage-admin
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list"]
- apiGroups: ["apps"]
  resources: ["deployments", "daemonsets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["storage.k8s.io"]
  resources: ["csidrivers", "storageclasses"]
  verbs: ["get", "list", "create", "update", "patch", "delete"]
---
# ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: storage-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: storage-admin
subjects:
- kind: ServiceAccount
  name: storage-admin
  namespace: default