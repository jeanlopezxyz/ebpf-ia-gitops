---
# Global configuration for eBPF + AI GitOps deployment

# Environment configuration
# 
# LAB MODE (default):
#   - Uses NodePort for services (accessible via Minikube IP + port)
#   - Uses podman driver (simpler setup)
#   - Virtual MetalLB IPs (192.168.49.x range)
#   - Access: http://192.168.58.2:32250/argocd
#
# PROD MODE:
#   - Uses LoadBalancer with MetalLB (direct IP access)  
#   - Uses qemu driver with bridge networking
#   - Real network IPs (10.0.20.x range) 
#   - Access: http://10.0.20.200 (direct)
#   - Requires: Network bridge interface configuration
#
deployment_mode:
  type: "lab"  # Options: "prod" or "lab" - Default: lab for development
  
# Minikube configuration
minikube:
  profile: "ebpf-ia"
  nodes: 1
  memory: "12288"  # Increased for ML builds and multiple applications
  cpus: 4
  disk_size: "20g"  # Explicit disk size
  kubernetes_version: "latest"  # Use latest available version (v1.33 series)
  driver: "{{ 'kvm2' if deployment_mode.type == 'prod' else 'kvm2' }}"  # Use kvm2 for better stability
  container_runtime: "containerd"  # Modern container runtime
  wait_timeout: 600  # 10 minutes timeout for cluster startup
  
# Network configuration
network:
  # Production: Use local network range for direct access
  # Lab: Use Minikube virtual range (accessed via NodePort)
  metallb_ip_range: "{{ '10.0.20.200-10.0.20.210' if deployment_mode.type == 'prod' else '192.168.49.100-192.168.49.110' }}"
  bridge_interface: "en0"  # Network interface for production bridge mode
  
# Cilium configuration
cilium:
  version: "1.16.5"  # Stable version for Minikube compatibility
  enable_hubble: true
  enable_gateway_api: true
  enable_l2_announcements: false  # Disabled for stability
  enable_netkit: false  # Disabled for stability
  
# ArgoCD configuration
argocd:
  version: "5.51.6"
  namespace: "argocd"
  admin_password: "admin123"  # Default local password for admin
  git_repo_url: "https://github.com/jeanlopezxyz/ebpf-ia-gitops.git"
  # Optional outbound proxy for Argo CD components (if your network requires it)
  http_proxy: ""
  https_proxy: ""
  no_proxy: "127.0.0.1,localhost,.svc,.cluster.local,kubernetes.default.svc"
  
# Application configuration
applications:
  ebpf_ai:
    namespace: "ebpf-security"
    git_repo: "https://github.com/jeanlopezxyz/ebpf-ia-gitops.git"
    git_path: "helm/charts/ebpf-ai"
    git_branch: "main"
    
  
  
# Ingress configuration
ingress:
  enabled: true
  nginx:
    enable_metrics: true
    ssl_redirect: false
    # Service type based on environment
    service_type: "{{ 'LoadBalancer' if deployment_mode.type == 'prod' else 'NodePort' }}"
  hosts:
    main: "ebpf-ai.local"
    registry: "registry.local"
    grafana: "grafana.local"
    prometheus: "prometheus.local"
    argocd: "argocd.local"
    dashboard: "dashboard.local"
  
# Resource limits
resources:
  ml_detector:
    replicas: 2
    cpu_limit: "1000m"
    memory_limit: "2Gi"
  ebpf_monitor:
    cpu_limit: "500m"
    memory_limit: "1Gi"
