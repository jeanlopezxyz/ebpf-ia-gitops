---
- name: Wait for ArgoCD to be fully ready
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    namespace: "{{ argocd.namespace }}"
    label_selectors:
      - app.kubernetes.io/name=argocd-server
    wait: true
    wait_condition:
      type: Ready
      status: "True"
    wait_timeout: 300
    
- name: Apply App-of-Apps pattern
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: argoproj.io/v1alpha1
      kind: Application
      metadata:
        name: ebpf-ai-apps
        namespace: "{{ argocd.namespace }}"
        labels:
          app.kubernetes.io/name: ebpf-ai-apps
          app.kubernetes.io/part-of: ebpf-ai-system
      spec:
        project: default
        source:
          repoURL: "{{ applications.ebpf_ai.git_repo }}"
          targetRevision: "{{ applications.ebpf_ai.git_branch }}"
          path: gitops/applications
        destination:
          server: https://kubernetes.default.svc
          namespace: "{{ argocd.namespace }}"
        syncPolicy:
          automated:
            prune: true
            selfHeal: true
            allowEmpty: false
          syncOptions:
            - CreateNamespace=true
            - PrunePropagationPolicy=foreground
            - PruneLast=true
          retry:
            limit: 5
            backoff:
              duration: 5s
              factor: 2
              maxDuration: 3m
              
- name: Create eBPF AI Application
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: argoproj.io/v1alpha1
      kind: Application
      metadata:
        name: ebpf-ai
        namespace: "{{ argocd.namespace }}"
        labels:
          app.kubernetes.io/name: ebpf-ai
          app.kubernetes.io/part-of: ebpf-ai-system
        finalizers:
          - resources-finalizer.argocd.argoproj.io
      spec:
        project: default
        source:
          repoURL: "{{ applications.ebpf_ai.git_repo }}"
          targetRevision: "{{ applications.ebpf_ai.git_branch }}"
          path: "{{ applications.ebpf_ai.git_path }}"
          helm:
            valueFiles:
              - values.yaml
            parameters:
              - name: global.namespace
                value: "{{ applications.ebpf_ai.namespace }}"
              - name: mlDetector.replicaCount
                value: "{{ resources.ml_detector.replicas }}"
              - name: autoscaling.enabled
                value: "true"
              - name: redis.enabled
                value: "true"
              - name: prometheus.enabled
                value: "true"
              - name: grafana.enabled
                value: "true"
        destination:
          server: https://kubernetes.default.svc
          namespace: "{{ applications.ebpf_ai.namespace }}"
        syncPolicy:
          automated:
            prune: true
            selfHeal: true
            allowEmpty: false
          syncOptions:
            - CreateNamespace=true
            - PrunePropagationPolicy=foreground
            - PruneLast=true
          retry:
            limit: 5
            backoff:
              duration: 5s
              factor: 2
              maxDuration: 3m
        revisionHistoryLimit: 10
        
- name: Wait for ArgoCD application to be created
  kubernetes.core.k8s_info:
    api_version: argoproj.io/v1alpha1
    kind: Application
    name: ebpf-ai
    namespace: "{{ argocd.namespace }}"
    wait: true
    wait_timeout: 60
    
- name: Display GitOps setup status
  debug:
    msg:
      - "ðŸš€ ArgoCD Applications configured successfully!"
      - "ðŸ“‹ App-of-Apps: ebpf-ai-apps"
      - "ðŸ¤– Main Application: ebpf-ai"
      - "ðŸ”„ Sync Policy: Automated (prune + self-heal enabled)"
      - "ðŸ“¦ Git Repository: {{ applications.ebpf_ai.git_repo }}"
      - "ðŸŒ¿ Branch: {{ applications.ebpf_ai.git_branch }}"